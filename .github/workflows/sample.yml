name: Build and Deploy Application

on:
  workflow_dispatch:
    inputs:
      BRANCH_NAME:
        type: string
        default: main
        description: Git branch to build
      BUILD_TYPE:
        type: choice
        options: ['development', 'staging', 'production']
        description: Build environment type
      RUN_TESTS:
        type: boolean
        default: true
        description: Run tests before building
      PUSH_IMAGE:
        type: boolean
        default: true
        description: Push Docker image to registry

env:
  APP_NAME: my-application

jobs:

  checkout-and-build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.BRANCH_NAME }}
    
  build-with-makefile:
    runs-on: ubuntu-latest
    needs: checkout-and-build
    
    env:
      BUILD_ENV: ${{ inputs.BUILD_TYPE }}
    
    steps:
      - name: Build application
        run: make build ENV=${BUILD_ENV}

  run-tests:
    runs-on: ubuntu-latest
    needs: build-with-makefile
    if: contains(github.event_name, 'workflow_dispatch') && inputs.RUN_TESTS == 'true'
    
    steps:
      - name: Run tests
        run: make test

  build-docker-image:
    runs-on: ubuntu-latest
    needs: run-tests
    
    env:
      DOCKER_IMAGE: "my-registry/${{ env.APP_NAME }}:${{ github.run_number }}"
    
    steps:
      - name: Build Docker image
        run: docker build -t ${{ env.DOCKER_IMAGE }} --build-arg ENV=${BUILD_ENV} .

  push-docker-image:
    runs-on: ubuntu-latest
    needs: build-docker-image
    if: contains(github.event_name, 'workflow_dispatch') && inputs.PUSH_IMAGE == 'true'
    
    secrets:
      DOCKER_REGISTRY_CREDENTIALS: ${{ secrets.DOCKER_REGISTRY_CREDENTIALS }}
    
    steps:
      - name: Log in to Docker registry
        uses: docker/login-action@v3
        with:
          credentials-id: DOCKER_REGISTRY_CREDENTIALS
    
      - name: Push Docker image
        run: |
          docker push ${{ env.DOCKER_IMAGE }}
          
          if [ "$BRANCH_NAME" == "main" ]; then
            docker tag ${{ env.DOCKER_IMAGE }} my-registry/${{ env.APP_NAME }}:latest
            docker push my-registry/${{ env.APP_NAME }}:latest
          fi
