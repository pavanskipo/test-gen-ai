name: Build and Deploy

on:
  workflow_dispatch:
    inputs:
      branch-name:
        type: string
        default: main
        description: Git branch to build
        required: false
      build-environment:
        type: choice
        options: ['development', 'staging', 'production']
        description: Build environment type
        required: true
      run-tests:
        type: boolean
        default: true
        description: Run tests before building
        required: false
      push-image:
        type: boolean
        default: true
        description: Push Docker image to registry
        required: false

env:
  APP_NAME: my-application
  DOCKER_IMAGE: "my-registry/${{ inputs.build-environment }}:${{ steps.build-docker-image.outputs.build-number }}"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        type: checkout
        uses: actions/checkout@v2
        
      - name: Build application
        run: make build ENV=${{ inputs.build-environment }}
        
      - name: Run tests
        if: inputs.run-tests == 'true'
        run: make test
        
      - name: Build Docker image
        id: build-docker-image
        uses: docker/metadata-action@v1
        with:
          images: ${{ env.DOCKER_IMAGE }}
          context: .
          metadata-file: ./Dockerfile
      
      - name: Push Docker image to registry
        if: inputs.push-image == 'true'
        uses: docker/login-action@v2
        with:
          credentials: secrets.DOCKER_REGISTRY_CREDENTIALS
        run: |
          echo "Pushing Docker image..."
          docker push ${{ env.DOCKER_IMAGE }}
          
          if [[ "${{ inputs.branch-name }}" == "main" ]]; then
            echo "Tagging and pushing as latest..."
            docker tag ${{ env.DOCKER_IMAGE }} my-registry/${{ env.APP_NAME }}:latest
            docker push my-registry/${{ env.APP_NAME }}:latest
          fi
